{
  "openapi" : "3.0.1",
  "info" : {
    "version" : "0.1",
    "title" : "AM API",
    "description" : "AM API",
    "contact" : {
      "url" : "https://am.c4r.eu/support",
      "email" : "support@am.c4r.eu"
    }
  },
  "servers" : [ {
    "url" : "https://{environment}/v0.1",
    "description" : "The API server.",
    "variables" : {
      "environment" : {
        "default" : "c4r-am.jbs.com.ua",
        "enum" : [ "c4r-am.jbs.com.ua", "eu.c4r.am" ],
        "description" : "This value is assigned by the service provider."
      }
    }
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/msrulestree/{treeType}/nodes" : {
      "get" : {
        "tags" : [ "Rules tree" ],
        "description" : "Gets fist level list of tree rule nodes (groups).\n\nIn case of `forceExpandAll` is `true` then all tree will be returned (**all nodes with nested childrens**).\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "treeType",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "basic", "categorical", "product" ],
            "example" : "basic"
          },
          "description" : "The min stock group/rule type."
        }, {
          "$ref" : "#/components/parameters/Sort"
        }, {
          "in" : "query",
          "name" : "forceExpandAll",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false,
            "example" : true
          }
        }, {
          "in" : "query",
          "name" : "name.contains",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "product.contains",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "coef.equal",
          "required" : false,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "in" : "query",
          "name" : "percent.equal",
          "required" : false,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "in" : "query",
          "name" : "priority.equal",
          "required" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - The request was successful, the rule tree are returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/components/schemas/BasicGroupRuleTreeTableRow"
                    }, {
                      "$ref" : "#/components/schemas/CategoricalGroupRuleTreeTableRow"
                    }, {
                      "$ref" : "#/components/schemas/ProductGroupRuleTreeTableRow"
                    } ]
                  }
                },
                "example" : [ {
                  "id" : 10,
                  "typeKey" : "MsRuleGroup.Product",
                  "cellValues" : {
                    "id" : 10,
                    "name" : "основные"
                  },
                  "rowData" : {
                    "childrenTotal" : 4,
                    "validFor" : {
                      "from" : "2012-08-03T00:00:00.000Z",
                      "to" : "2099-08-03T00:00:00.000Z"
                    },
                    "expired" : false,
                    "storeRef" : {
                      "typeKey" : "ObjectRef.Single",
                      "paths" : [ {
                        "id" : 333,
                        "typeKey" : "StoreSubgroup",
                        "name" : "Эконом",
                        "parentPath" : {
                          "id" : 22,
                          "typeKey" : "StoreGroup",
                          "name" : "Сегмент"
                        }
                      } ]
                    }
                  },
                  "children" : [ {
                    "id" : 10,
                    "typeKey" : "MsRule.Product",
                    "cellValues" : {
                      "id" : 10,
                      "name" : "соки",
                      "product" : "Сок Galicia яблочно-грушевый",
                      "coef" : 2,
                      "params" : {
                        "inUse" : true,
                        "useRounding" : false
                      },
                      "constrains" : {
                        "useYFacings" : true,
                        "useTopLayer" : true,
                        "useDepthCapacityLimit" : false
                      }
                    }
                  }, {
                    "id" : 20,
                    "typeKey" : "MsRule.Product",
                    "cellValues" : {
                      "id" : 20,
                      "name" : "вода",
                      "product" : "Вода БонБуассон мин слаб/газ 2л",
                      "coef" : 1,
                      "params" : {
                        "inUse" : true,
                        "useRounding" : false
                      },
                      "constrains" : {
                        "useYFacings" : true,
                        "useTopLayer" : true,
                        "useDepthCapacityLimit" : false
                      }
                    }
                  }, {
                    "id" : 30,
                    "typeKey" : "MsRule.Product",
                    "cellValues" : {
                      "id" : 30,
                      "name" : "вода",
                      "product" : "Вода Боржоми сильногазированная лечебно-столовая 0,5л",
                      "coef" : 4,
                      "params" : {
                        "inUse" : true,
                        "useRounding" : true
                      },
                      "constrains" : {
                        "useYFacings" : false,
                        "useTopLayer" : false,
                        "useDepthCapacityLimit" : false
                      }
                    }
                  }, {
                    "id" : 40,
                    "typeKey" : "MsRule.Product",
                    "cellValues" : {
                      "id" : 40,
                      "name" : "вафли",
                      "product" : "Вафлі Артек класичні Домашне свято 70г",
                      "coef" : 4,
                      "params" : {
                        "inUse" : true,
                        "useRounding" : true
                      },
                      "constrains" : {
                        "useYFacings" : false,
                        "useTopLayer" : false,
                        "useDepthCapacityLimit" : false
                      }
                    }
                  } ]
                }, {
                  "id" : 20,
                  "typeKey" : "MsRuleGroup.Product",
                  "cellValues" : {
                    "id" : 20,
                    "name" : "другие"
                  },
                  "rowData" : {
                    "childrenTotal" : 0,
                    "validFor" : {
                      "from" : "2012-08-03T00:00:00.000Z",
                      "to" : "2018-08-03T00:00:00.000Z"
                    },
                    "expired" : true,
                    "storeRef" : {
                      "total" : 123,
                      "typeKey" : "ObjectRef.Multiple",
                      "paths" : [ {
                        "id" : 1,
                        "typeKey" : "Store",
                        "name" : "499",
                        "parentPath" : {
                          "id" : 1,
                          "typeKey" : "Store",
                          "key" : "ул. Ломаносова, 73а",
                          "name" : "ул. Ломаносова, 73а",
                          "parentPath" : {
                            "id" : 1,
                            "typeKey" : "Store",
                            "key" : "Голосеевский",
                            "name" : "Голосеевский",
                            "parentPath" : {
                              "id" : 1,
                              "typeKey" : "Store",
                              "key" : "Киев",
                              "name" : "Киев"
                            }
                          }
                        }
                      }, {
                        "id" : 2,
                        "typeKey" : "Store",
                        "name" : "198",
                        "parentPath" : {
                          "id" : 2,
                          "typeKey" : "Store",
                          "key" : "ул. Киевский Шлях, 2/6",
                          "name" : "ул. Киевский Шлях, 2/6",
                          "parentPath" : {
                            "id" : 2,
                            "typeKey" : "Store",
                            "key" : "Борисполь",
                            "name" : "Борисполь"
                          }
                        }
                      } ]
                    }
                  }
                } ]
              }
            }
          },
          "304" : {
            "$ref" : "#/components/responses/NotModified"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/msrulegroups" : {
      "post" : {
        "tags" : [ "Group of rules" ],
        "operationId" : "createMsRuleGroup",
        "summary" : "Create a group of rules.",
        "description" : "Create a new rule group.\n",
        "requestBody" : {
          "description" : "Rule group object to create.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/BasicMsRuleGroup"
                }, {
                  "$ref" : "#/components/schemas/CategoricalMsRuleGroup"
                }, {
                  "$ref" : "#/components/schemas/ProductMsRuleGroup"
                } ],
                "discriminator" : {
                  "propertyName" : "typeKey"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created - The request was successful and the resource is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/BasicMsRuleGroup"
                  }, {
                    "$ref" : "#/components/schemas/CategoricalMsRuleGroup"
                  }, {
                    "$ref" : "#/components/schemas/ProductMsRuleGroup"
                  } ],
                  "discriminator" : {
                    "propertyName" : "typeKey"
                  }
                }
              }
            },
            "links" : {
              "edit" : {
                "$ref" : "#/components/links/GetMsRuleGroupById"
              }
            },
            "headers" : {
              "Location" : {
                "$ref" : "#/components/headers/Location"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/msrulegroups/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "number",
          "format" : "int32",
          "example" : 123
        },
        "description" : "The min stock rules group id."
      } ],
      "get" : {
        "tags" : [ "Group of rules" ],
        "operationId" : "getMsRuleGroup",
        "summary" : "Get a group of rules.",
        "description" : "Get a group of rules by id.\n",
        "responses" : {
          "200" : {
            "description" : "OK - The request was successful, the rules group are returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/BasicMsRuleGroup"
                  }, {
                    "$ref" : "#/components/schemas/CategoricalMsRuleGroup"
                  }, {
                    "$ref" : "#/components/schemas/ProductMsRuleGroup"
                  } ],
                  "discriminator" : {
                    "propertyName" : "typeKey"
                  }
                }
              }
            }
          },
          "304" : {
            "$ref" : "#/components/responses/NotModified"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "put" : {
        "tags" : [ "Group of rules" ],
        "operationId" : "updateMsRuleGroup",
        "summary" : "Update a group of rules.",
        "description" : "Update a group of rules by id.\n",
        "requestBody" : {
          "description" : "Rule group object to update.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/BasicMsRuleGroup"
                }, {
                  "$ref" : "#/components/schemas/CategoricalMsRuleGroup"
                }, {
                  "$ref" : "#/components/schemas/ProductMsRuleGroup"
                } ],
                "discriminator" : {
                  "propertyName" : "typeKey"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK - The request was successful and the updated resource is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/BasicMsRuleGroup"
                  }, {
                    "$ref" : "#/components/schemas/CategoricalMsRuleGroup"
                  }, {
                    "$ref" : "#/components/schemas/ProductMsRuleGroup"
                  } ],
                  "discriminator" : {
                    "propertyName" : "typeKey"
                  }
                }
              }
            },
            "links" : {
              "edit" : {
                "$ref" : "#/components/links/GetMsRuleGroupById"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete" : {
        "summary" : "Delete a group of rules.",
        "description" : "Delete a group of rules.\n",
        "tags" : [ "Group of rules" ],
        "operationId" : "deleteRuleGroup",
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/msrules" : {
      "post" : {
        "tags" : [ "Rules" ],
        "operationId" : "createMsRule",
        "summary" : "Create a rule.",
        "description" : "Create a new rule.\n",
        "requestBody" : {
          "description" : "Rule object to create.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/BasicMsRule"
                }, {
                  "$ref" : "#/components/schemas/CategoricalMsRule"
                }, {
                  "$ref" : "#/components/schemas/ProductMsRule"
                } ],
                "discriminator" : {
                  "propertyName" : "typeKey"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created - The request was successful and the resource is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/BasicMsRule"
                  }, {
                    "$ref" : "#/components/schemas/CategoricalMsRule"
                  }, {
                    "$ref" : "#/components/schemas/ProductMsRule"
                  } ],
                  "discriminator" : {
                    "propertyName" : "typeKey"
                  }
                }
              }
            },
            "links" : {
              "edit" : {
                "$ref" : "#/components/links/UpdateMsRule"
              }
            },
            "headers" : {
              "Location" : {
                "$ref" : "#/components/headers/Location"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/msrules/{id}" : {
      "parameters" : [ {
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "number",
          "format" : "int32",
          "example" : 123
        },
        "description" : "The min stock rule id."
      } ],
      "get" : {
        "tags" : [ "Rules" ],
        "operationId" : "getMsRule",
        "responses" : {
          "200" : {
            "description" : "OK - The request was successful, the rule are returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/BasicMsRule"
                  }, {
                    "$ref" : "#/components/schemas/CategoricalMsRule"
                  }, {
                    "$ref" : "#/components/schemas/ProductMsRule"
                  } ],
                  "discriminator" : {
                    "propertyName" : "typeKey"
                  }
                }
              }
            }
          },
          "304" : {
            "$ref" : "#/components/responses/NotModified"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "put" : {
        "tags" : [ "Rules" ],
        "operationId" : "updateMsRule",
        "requestBody" : {
          "description" : "Rule object to update.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/BasicMsRule"
                }, {
                  "$ref" : "#/components/schemas/CategoricalMsRuleGroup"
                }, {
                  "$ref" : "#/components/schemas/ProductMsRuleGroup"
                } ],
                "discriminator" : {
                  "propertyName" : "typeKey"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK - The request was successful and the updated resource is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/BasicMsRule"
                  }, {
                    "$ref" : "#/components/schemas/CategoricalMsRule"
                  }, {
                    "$ref" : "#/components/schemas/ProductMsRule"
                  } ],
                  "discriminator" : {
                    "propertyName" : "typeKey"
                  }
                }
              }
            },
            "links" : {
              "edit" : {
                "$ref" : "#/components/links/GetMsRuleById"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete" : {
        "summary" : "Delete a rule.",
        "description" : "Delete a rule.\n",
        "tags" : [ "Rules" ],
        "operationId" : "deleteRule",
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "TreeTableRow" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "format" : "int64",
            "readOnly" : true
          },
          "typeKey" : {
            "type" : "string"
          },
          "rowData" : {
            "$ref" : "#/components/schemas/TreeTableRowData"
          },
          "cellValues" : {
            "type" : "object"
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TreeTableRow"
            }
          }
        }
      },
      "TreeTableRowData" : {
        "type" : "object",
        "properties" : {
          "childrenTotal" : {
            "type" : "number",
            "format" : "int32"
          }
        }
      },
      "ValidFor" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "format" : "date"
          },
          "to" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "MsRuleGroupParamsCell" : {
        "properties" : {
          "inUse" : {
            "type" : "boolean",
            "description" : "Is rule in use flag"
          },
          "useRounding" : {
            "type" : "boolean",
            "description" : "Is use rounding flag"
          }
        }
      },
      "MsRuleGroupConstrainsCell" : {
        "properties" : {
          "useYFacings" : {
            "description" : "Count products in height flag\n",
            "type" : "boolean"
          },
          "useTopLayer" : {
            "description" : "Use shelf top layer flag\n",
            "type" : "boolean"
          },
          "useDepthCapacityLimit" : {
            "description" : "Use shelf depth capacity limit flag\n",
            "type" : "boolean"
          }
        }
      },
      "MsRuleGroupRowData" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TreeTableRowData"
        }, {
          "type" : "object",
          "properties" : {
            "validFor" : {
              "$ref" : "#/components/schemas/ValidFor"
            },
            "expired" : {
              "type" : "boolean"
            },
            "storeRef" : {
              "type" : "object",
              "description" : "TODO define type"
            }
          }
        } ]
      },
      "CategoricalMsRuleGroupRowData" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRuleGroupRowData"
        }, {
          "type" : "object",
          "properties" : {
            "productCategoryRef" : {
              "type" : "object",
              "description" : "TODO define type"
            }
          }
        } ]
      },
      "BasicGroupRuleTreeTableRow" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TreeTableRow"
        }, {
          "type" : "object",
          "properties" : {
            "rowData" : {
              "$ref" : "#/components/schemas/MsRuleGroupRowData"
            },
            "children" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BasicGroupRuleTreeTableRow"
              }
            }
          }
        } ]
      },
      "ProductGroupRuleTreeTableRow" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasicGroupRuleTreeTableRow"
        }, {
          "type" : "object",
          "properties" : {
            "children" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ProductGroupRuleTreeTableRow"
              }
            }
          }
        } ]
      },
      "CategoricalGroupRuleTreeTableRow" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasicGroupRuleTreeTableRow"
        }, {
          "type" : "object",
          "properties" : {
            "children" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CategoricalGroupRuleTreeTableRow"
              }
            }
          }
        } ]
      },
      "MsRuleFactor" : {
        "required" : [ "value", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "coefficient", "percent" ],
            "default" : "coefficient"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "example" : {
          "type" : "coefficient",
          "value" : 12.34
        }
      },
      "PriorityThousand" : {
        "properties" : {
          "priority" : {
            "description" : "Priority from `1` to `999`\n",
            "type" : "number",
            "format" : "int32",
            "minimum" : 1,
            "maximum" : 999
          }
        },
        "example" : {
          "priority" : 12
        }
      },
      "SortParamsSchema" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "example" : [ "id,asc", "name,desc" ]
      },
      "MsRuleGroup" : {
        "type" : "object",
        "required" : [ "typeKey", "id" ],
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "number",
            "format" : "int64",
            "description" : "The group id."
          },
          "typeKey" : {
            "type" : "string",
            "enum" : [ "MsRuleGroup.Basic", "MsRuleGroup.Categorical", "MsRuleGroup.Product" ],
            "description" : "The group type key."
          },
          "name" : {
            "type" : "string",
            "description" : "The group name."
          },
          "validFor" : {
            "$ref" : "#/components/schemas/ValidFor"
          },
          "children" : {
            "readOnly" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MsRule"
            }
          }
        }
      },
      "BasicMsRuleGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRuleGroup"
        }, {
          "type" : "object",
          "properties" : {
            "priority" : {
              "type" : "number",
              "format" : "int32",
              "description" : "Group priority."
            },
            "typeKey" : {
              "type" : "string",
              "enum" : [ "MsRuleGroup.Basic" ]
            }
          }
        } ]
      },
      "CategoricalMsRuleGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRuleGroup"
        }, {
          "type" : "object",
          "properties" : {
            "priority" : {
              "type" : "number",
              "format" : "int32",
              "description" : "Group priority."
            },
            "typeKey" : {
              "type" : "string",
              "enum" : [ "MsRuleGroup.Categorical" ]
            }
          }
        } ]
      },
      "ProductMsRuleGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRuleGroup"
        }, {
          "type" : "object",
          "properties" : {
            "typeKey" : {
              "type" : "string",
              "enum" : [ "MsRuleGroup.Product" ]
            }
          }
        } ]
      },
      "MsRule" : {
        "type" : "object",
        "required" : [ "id", "typeKey" ],
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "number",
            "format" : "int64",
            "description" : "The rule id."
          },
          "typeKey" : {
            "type" : "string",
            "enum" : [ "MsRule.Basic", "MsRule.Categorical", "MsRule.Product" ],
            "description" : "The rule type key.\n"
          },
          "inUse" : {
            "type" : "boolean",
            "description" : "Is rule in use flag\n"
          },
          "useRounding" : {
            "type" : "boolean",
            "description" : "Is use rounding flag\n"
          },
          "useYFacings" : {
            "description" : "Count products in height flag\n",
            "type" : "boolean"
          },
          "useTopLayer" : {
            "description" : "Use shelf top layer flag\n",
            "type" : "boolean"
          },
          "useDepthCapacityLimit" : {
            "description" : "Use shelf depth capacity limit flag\n",
            "type" : "boolean"
          }
        }
      },
      "BasicMsRule" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRule"
        }, {
          "type" : "object",
          "properties" : {
            "priority" : {
              "type" : "number",
              "format" : "int32",
              "description" : "Rule priority."
            },
            "typeKey" : {
              "type" : "string",
              "enum" : [ "MsRule.Basic" ]
            }
          }
        } ]
      },
      "CategoricalMsRule" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRule"
        }, {
          "type" : "object",
          "properties" : {
            "priority" : {
              "type" : "number",
              "format" : "int32",
              "description" : "Rule priority."
            },
            "typeKey" : {
              "type" : "string",
              "enum" : [ "MsRule.Categorical" ]
            }
          }
        } ]
      },
      "ProductMsRule" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MsRule"
        }, {
          "type" : "object",
          "properties" : {
            "typeKey" : {
              "type" : "string",
              "enum" : [ "MsRule.Product" ]
            }
          }
        } ]
      },
      "Error" : {
        "description" : "API operation error response object",
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Error message description"
          }
        },
        "example" : {
          "message" : "Error description"
        }
      }
    },
    "parameters" : {
      "msRuleType" : {
        "name" : "type",
        "in" : "query",
        "description" : "The min stock rule type.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "basic", "categorical", "product" ],
          "example" : "basic"
        }
      },
      "Sort" : {
        "name" : "sort",
        "in" : "query",
        "required" : false,
        "description" : "Sort fields query.\n",
        "schema" : {
          "$ref" : "#/components/schemas/SortParamsSchema"
        },
        "example" : [ "id,asc", "name,desc" ]
      }
    },
    "links" : {
      "GetMsRuleGroupById" : {
        "operationId" : "getMsRuleGroup",
        "parameters" : {
          "id" : "$response.body#/id"
        }
      },
      "GetMsRuleById" : {
        "operationId" : "getMsRule",
        "parameters" : {
          "id" : "$response.body#/id"
        }
      },
      "UpdateMsRule" : {
        "operationId" : "updateMsRule",
        "parameters" : {
          "id" : "$response.body#/id"
        }
      }
    },
    "headers" : {
      "Location" : {
        "description" : "The Location response header indicates the URL to redirect a page to or created resource. It only provides a meaning when served with a 3xx (redirection) or 201 (created) status response.\n",
        "schema" : {
          "type" : "string",
          "example" : "https://c4r-am.jbs.com.ua/v0.1/<resources>/<resourceid>"
        },
        "required" : true
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "Error for invalid request details description",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "message" : "Bad request"
            }
          }
        }
      },
      "NotModified" : {
        "description" : "Resource are not modified"
      },
      "Conflict" : {
        "description" : "Conflict - A conflicting resource already exists.\n",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "message" : "Creating a resource with a name already exists."
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Authorization information is missing or invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "message" : "Authorization information is missing or invalid"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "Access forbidden for getting resource",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "message" : "Access forbidden for getting resource"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Not Found - The requested resource could not be found.\n",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "message" : "The requested resource could not be found"
            }
          }
        }
      },
      "UnexpectedError" : {
        "description" : "Unexpected error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "message" : "Unexpected error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "The JWT token using Bearer scheme for authorization and authentication. The roles for authorization is specified within the token.\n\n### [Example JWT token](https://jwt.io/#debugger-io?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiUk9MRV9DQVRFR09SWV9NQU5BR0VSIiwiaXNzIjoiaHR0cHM6Ly9hbS5jNHIuZXUiLCJoYW5kbGUiOiJiaWdjYXQiLCJ1c2VySWQiOiI0MDAxNjM1NiIsImVtYWlsIjoiYmlnY2F0QGFtLmM0ci5ldSIsImp0aSI6Ijg0NjFhYzNiLWU1NGYtNDE4Zi04YTc3LTQxZGNlZDNmMjRjZCIsImlhdCI6MTUyMzM2NTY4MywiZXhwIjoxNTI4NTQ5NjgzfQ.FDHHiHkw6wGrymvBaqYW7h6nhugKUSAcLUXbClovA9c)\n### Example JWT token raw data:\n```\nBearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiUk9MRV9DQVRFR09SWV9NQU5BR0VSIiwiaXNzIjoiaHR0cHM6Ly9hbS5jNHIuZXUiLCJoYW5kbGUiOiJiaWdjYXQiLCJ1c2VySWQiOiI0MDAxNjM1NiIsImVtYWlsIjoiYmlnY2F0QGFtLmM0ci5ldSIsImp0aSI6Ijg0NjFhYzNiLWU1NGYtNDE4Zi04YTc3LTQxZGNlZDNmMjRjZCIsImlhdCI6MTUyMzM2NTY4MywiZXhwIjoxNTI4NTQ5NjgzfQ.FDHHiHkw6wGrymvBaqYW7h6nhugKUSAcLUXbClovA9c\n```"
      }
    }
  }
}